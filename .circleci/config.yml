version: 2.1

jobs:
  unit:
    docker:
      - image: circleci/golang:1.15-node
    working_directory: ~/influxdata/ui
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            npx yarn install
            npx yarn prettier
          name: 'Install Dependencies'
      - run: yarn generate
      - run:
          name: parallel jest tests
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.test.ts*" | circleci tests split --split-by=timings)
            npx yarn test:circleci $TESTFILES
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage
          destination: raw-test-output
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn
  unit-cloud:
    docker:
      - image: circleci/golang:1.15-node
    working_directory: ~/influxdata/ui
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            npx yarn install
            npx yarn prettier
          name: 'Install Dependencies'
      - run: CLOUD_URL="/auth" yarn generate
      - run:
          name: parallel jest tests
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.test.ts*" | circleci tests split --split-by=timings)
            npx yarn test:circleci $TESTFILES
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage
          destination: raw-test-output
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn
  lint:
    docker:
      - image: circleci/golang:1.15-node
    working_directory: ~/influxdata/ui
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            yarn install
          name: 'Install Dependencies'
      - run: yarn generate
      - run:
          name: parallel eslint
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.ts*" "cypress/**/*.ts*" | circleci tests split --split-by=filesize)
            yarn eslint:circleci $TESTFILES
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn

  lint-cloud:
    docker:
      - image: circleci/golang:1.15-node
    working_directory: ~/influxdata/ui
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            yarn install
          name: 'Install Dependencies'
      - run: CLOUD_URL="/auth" yarn generate
      - run:
          name: parallel eslint
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.ts*" "cypress/**/*.ts*" | circleci tests split --split-by=filesize)
            yarn eslint:circleci $TESTFILES
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn

  monitor-ci-tests:
    docker:
      - image: quay.io/influxdb/ui-pipeline:latest
        auth:
          username: $QUAY_CD_USER
          password: $QUAY_CD_PASSWORD
    steps:
      - run:
          name: Run monitor-ci tests
          command: API_KEY=${MONITOR_CI_API_KEY} PULL_REQUEST=${CIRCLE_PULL_REQUEST} MONITOR_CI_BRANCH="master" UI_BRANCH=${CIRCLE_BRANCH} SHA=${CIRCLE_SHA1} /run-monitor-ci-tests.bash
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/build-oss-image
          destination: test_artifacts/results/build-oss-image
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/oss-e2e
          destination: test_artifacts/results/oss-e2e
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/build-image
          destination: test_artifacts/results/build-image
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/cloud-e2e
          destination: test_artifacts/results/cloud-e2e
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/cloud-e2e-firefox
          destination: test_artifacts/results/cloud-e2e-firefox
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/cloud-e2e-k8s-idpe
          destination: test_artifacts/results/cloud-e2e-k8s-idpe
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/cloud-lighthouse
          destination: test_artifacts/results/cloud-lighthouse
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/smoke
          destination: test_artifacts/results/smoke
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/build-prod-image
          destination: test_artifacts/results/build-prod-image
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/deploy
          destination: test_artifacts/results/deploy
      - store_artifacts:
          path: monitor-ci/test-artifacts/results/remocal
          destination: test_artifacts/results/remocal

  oss-changelog:
    docker:
      - image: quay.io/influxdb/changelogger:0dbf37ba8a912460358d322dcad414b80ce074f2
    steps:
      - checkout
      - run:
          name: Generate changelog
          command: |
            mkdir release
            previous_tag="$(git tag -l --merged | egrep '^OSS-[0-9]+\.[0-9]+\.[0-9]+.*' | sort -V | tail -2 | head -1)"
            GIT_REPO=https://github.com/influxdata/ui git-cliff -t ${CIRCLE_TAG} "${previous_tag}"..${CIRCLE_TAG} > release/CHANGELOG.md
      - persist_to_workspace:
          root: .
          paths:
            - release/CHANGELOG.md
      - store_artifacts:
          path: release/

  build-oss-ui:
    docker:
      - image: cimg/node:16.13.0
    resource_class: large
    steps:
      - checkout
      - run:
          name: Build UI
          no_output_timeout: 30m
          command: |
            yarn install && yarn build
            mkdir release
            tar -czvf release/build.tar.gz ./build
            cd release && shasum -a 256 build.tar.gz > sha256.txt && cd ../
      - persist_to_workspace:
          root: .
          paths:
            - release/build.tar.gz
            - release/sha256.txt
      - store_artifacts:
          path: release/

  publish-oss-release:
    docker:
      - image: cimg/go:1.17.2
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install ghr
          command: |
            go install github.com/tcnksm/ghr@v0.14.0
      - run:
          name: Push draft release
          command: |
            ghr \
              -t ${TEAM_EDGE_BOT_GITHUB_TOKEN} \
              -u influxdata \
              -r ui \
              -c ${CIRCLE_SHA1} \
              -n ${CIRCLE_TAG} \
              -b "$(cat release/CHANGELOG.md)" \
              -draft \
              ${CIRCLE_TAG} \
              release

workflows:
  version: 2
  build:
    jobs:
      - unit
      - lint
      - unit-cloud
      - lint-cloud
      - monitor-ci-tests

  oss-release:
    jobs:
      - oss-changelog:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^OSS-[0-9]+\.[0-9]+\.[0-9]+.*/
      - build-oss-ui:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^OSS-[0-9]+\.[0-9]+\.[0-9]+.*/
      - publish-oss-release:
          requires:
            - oss-changelog
            - build-oss-ui
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^OSS-[0-9]+\.[0-9]+\.[0-9]+.*/
